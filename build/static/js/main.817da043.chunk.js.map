{"version":3,"sources":["logo.svg","movieCard.js","searchMovies.js","App.js","reportWebVitals.js","index.js"],"names":["movieCard","movie","className","src","poster_path","alt","title","release_date","vote_average","overview","SearchMovies","useState","query","setQuery","movies","setMovies","searchMovies","e","a","preventDefault","url","fetch","res","json","data","results","console","log","onSubmit","htmlFor","name","type","target","value","filter","map","id","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6JAAe,I,yCCCA,SAASA,EAAT,GAA4B,IAARC,EAAO,EAAPA,MAC/B,OACI,sBAAKC,UAAU,OAAf,UACI,qBAAKA,UAAW,cAAcC,IAAG,0DAAqDF,EAAMG,aAC5FC,IAAMJ,EAAMK,MAAQ,YAEpB,sBAAKJ,UAAU,gBAAf,UACI,oBAAIA,UAAU,cAAd,SAA6BD,EAAMK,QACnC,4BAAG,wBAAOJ,UAAU,cAAjB,2BAA8CD,EAAMM,kBACvD,4BAAG,wBAAOL,UAAU,cAAjB,qBAAwCD,EAAMO,kBACjD,mBAAGN,UAAU,aAAb,SAA2BD,EAAMQ,iBCPlC,SAASC,IAAe,IAAD,IAETC,mBAAS,IAFA,mBAE3BC,EAF2B,KAEpBC,EAFoB,OAGPF,mBAAS,IAHF,mBAG3BG,EAH2B,KAGnBC,EAHmB,KAK5BC,EAAY,uCAAC,WAAMC,GAAN,mBAAAC,EAAA,6DACfD,EAAEE,iBAEIC,EAHS,kHAGuGR,EAHvG,iDAMOS,MAAMD,GANb,cAMLE,EANK,gBAOQA,EAAIC,OAPZ,OAOLC,EAPK,OAQXT,EAAUS,EAAKC,SARJ,kDAUXC,QAAQC,IAAR,MAVW,0DAAD,sDAclB,OACI,qCACA,uBAAMzB,UAAU,OAAO0B,SAAUZ,EAAjC,UACI,uBAAOa,QAAQ,QAAQ3B,UAAU,QAAjC,yBACA,0BAAOA,UAAU,GAAG4B,KAAK,QAAQC,KAAK,QAAtC,0BAAuD,SAAvD,4BAA2E,sBAA3E,sBAAuGnB,GAAvG,0BAAwH,SAACK,GAAD,OAAKJ,EAASI,EAAEe,OAAOC,UAA/I,IACA,wBAAQF,KAAK,SAAS7B,UAAU,SAAhC,uBAGJ,qBAAKA,UAAU,YAAf,SACSY,EAAOoB,QAAO,SAAAjC,GAAK,OAAIA,EAAMG,eAAa+B,KAAI,SAAAlC,GAAK,OAChD,cAAC,EAAD,CAAWA,MAAOA,GAAYA,EAAMmC,YCnBzCC,MATf,WACE,OACE,sBAAKnC,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,gCACA,cAACQ,EAAD,QCGS4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.817da043.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","\r\nexport default function movieCard({movie}){\r\n    return (\r\n        <div className=\"card\">\r\n            <img className =\"card--image\" src={`https://image.tmdb.org/t/p/w185_and_h278_bestv2/${movie.poster_path}`} \r\n            alt= {movie.title + \" poster\"} />\r\n            \r\n            <div className=\"card--content\">\r\n                <h3 className=\"card--title\">{movie.title}</h3>\r\n                <p><small className=\"small--text\">Release Date: {movie.release_date}</small></p>\r\n                <p><small className=\"small--text\">Rating: {movie.vote_average}</small></p>\r\n                <p className=\"card--desc\">{movie.overview}</p>\r\n            </div>                    \r\n        </div>\r\n    )\r\n}","import \"./index.css\";\r\nimport {useState} from \"react\";\r\nimport MovieCard from \"./movieCard\";\r\n\r\nexport default function SearchMovies(){\r\n    \r\n    const [query, setQuery]= useState('');\r\n    const [movies, setMovies]= useState([]);\r\n\r\n    const searchMovies=async(e)=>{\r\n        e.preventDefault();\r\n        \r\n        const url =`https://api.themoviedb.org/3/search/movie?api_key=8ecc45cf73e2ad17ef14065cbc4524b3&language=en-US&query=${query}&page=1&include_adult=false`;\r\n    \r\n        try {\r\n            const res = await fetch(url);\r\n            const data = await res.json();\r\n            setMovies(data.results);\r\n        }catch(err){\r\n            console.log(err);\r\n        }\r\n    }\r\n    \r\n    return(\r\n        <>\r\n        <form className=\"form\" onSubmit={searchMovies}>\r\n            <label htmlFor=\"query\" className=\"label\"> Movie Name</label>\r\n            <input className=\"\" name=\"query\" type=\"text\" className=\"query\" placeholder=\"e.g. Mrs.Doubtfire\" value={query} onChange={(e)=>setQuery(e.target.value)} />\r\n            <button type=\"submit\" className=\"button\">Search</button>\r\n        </form>\r\n\r\n        <div className=\"card-list\">\r\n                {movies.filter(movie => movie.poster_path).map(movie =>\r\n                    <MovieCard movie={movie} key={movie.id}/>\r\n                    )}\r\n            </div>\r\n        </>\r\n    )\r\n} ","import logo from './logo.svg';\nimport './App.css';\nimport './App.css';\nimport SearchMovies from \"./searchMovies\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">React Movie Search</h1>\n      <SearchMovies />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}